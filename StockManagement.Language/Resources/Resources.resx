<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="additionalInformation" xml:space="preserve">
    <value>Additional Information</value>
  </data>
  <data name="changeInfo" xml:space="preserve">
    <value>Change item info</value>
  </data>
  <data name="createItem" xml:space="preserve">
    <value>Create Stock item</value>
  </data>
  <data name="excelImport" xml:space="preserve">
    <value>Excel Import</value>
  </data>
  <data name="mapProperties" xml:space="preserve">
    <value>Map columns to properties</value>
  </data>
  <data name="search" xml:space="preserve">
    <value>Search:</value>
  </data>
  <data name="searchBoxDefault" xml:space="preserve">
    <value>Search...</value>
  </data>
  <data name="searchCodes" xml:space="preserve">
    <value>Search codes:</value>
  </data>
  <data name="searchLocation" xml:space="preserve">
    <value>Search location:</value>
  </data>
  <data name="searchNames" xml:space="preserve">
    <value>Search names:</value>
  </data>
  <data name="selectExcelSheet" xml:space="preserve">
    <value>Select Excel-sheet:</value>
  </data>
  <data name="selectItemType" xml:space="preserve">
    <value>Select item type:</value>
  </data>
  <data name="selectLanguage" xml:space="preserve">
    <value>Select language:</value>
  </data>
  <data name="selectManufacturer" xml:space="preserve">
    <value>Select manufacturer:</value>
  </data>
  <data name="selectType" xml:space="preserve">
    <value>Select stock item type:</value>
  </data>
  <data name="showPicture" xml:space="preserve">
    <value>Show picture</value>
  </data>
  <data name="amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="checkin" xml:space="preserve">
    <value>Checkin</value>
  </data>
  <data name="checkout" xml:space="preserve">
    <value>Checkout</value>
  </data>
  <data name="code" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="description" xml:space="preserve">
    <value>Descritpion</value>
  </data>
  <data name="location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="manufacturer" xml:space="preserve">
    <value>Manufacturer</value>
  </data>
  <data name="name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="more" xml:space="preserve">
    <value>More</value>
  </data>
  <data name="price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="quit" xml:space="preserve">
    <value>Quit</value>
  </data>
  <data name="rimDiameter" xml:space="preserve">
    <value>Rim diameter</value>
  </data>
  <data name="settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="width" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="languageChangedMessage" xml:space="preserve">
    <value>For language changes to take effect, please restart the application.</value>
  </data>
  <data name="german" xml:space="preserve">
    <value>German</value>
  </data>
  <data name="english" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="spanish" xml:space="preserve">
    <value>Spanish</value>
  </data>
  <data name="factor" xml:space="preserve">
    <value>Factor</value>
  </data>
  <data name="none" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="stockItem" xml:space="preserve">
    <value>Stock item</value>
  </data>
  <data name="machine" xml:space="preserve">
    <value>Machine</value>
  </data>
  <data name="tireDimensions" xml:space="preserve">
    <value>Tire dimensions</value>
  </data>
  <data name="sparePart" xml:space="preserve">
    <value>Spare part</value>
  </data>
  <data name="tire" xml:space="preserve">
    <value>Tire</value>
  </data>
  <data name="loading" xml:space="preserve">
    <value>Loading</value>
  </data>
  <data name="addToShoppingCart" xml:space="preserve">
    <value>Add to Shopping Cart</value>
  </data>
  <data name="shoppingCart" xml:space="preserve">
    <value>Shopping Cart</value>
  </data>
  <data name="shoppingCartItems" xml:space="preserve">
    <value>Shopping Cart Items</value>
  </data>
  <data name="total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="deleteItem" xml:space="preserve">
    <value>Delete Item</value>
  </data>
  <data name="customerId" xml:space="preserve">
    <value>Customer ID</value>
  </data>
  <data name="lastname" xml:space="preserve">
    <value>Lastname</value>
  </data>
  <data name="address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="phoneNumber" xml:space="preserve">
    <value>Phone number</value>
  </data>
  <data name="identificationNumber" xml:space="preserve">
    <value>Identification number (C.I. / RUC)</value>
  </data>
  <data name="postboxNumber" xml:space="preserve">
    <value>Postbox number</value>
  </data>
  <data name="email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="adjustDialogBorderSize" xml:space="preserve">
    <value>Adjust size of border for inner window</value>
  </data>
  <data name="stockItems" xml:space="preserve">
    <value>Stock items</value>
  </data>
  <data name="clients" xml:space="preserve">
    <value>Clients</value>
  </data>
  <data name="invoices" xml:space="preserve">
    <value>Invoices</value>
  </data>
  <data name="selectedFileInUse" xml:space="preserve">
    <value>Selected File is currently being used by another process and cannot be opened.</value>
  </data>
  <data name="createCustomer" xml:space="preserve">
    <value>Create Customer</value>
  </data>
  <data name="searchLastnames" xml:space="preserve">
    <value>Search lastnames:</value>
  </data>
  <data name="searchCustomerIds" xml:space="preserve">
    <value>Search customer IDs:</value>
  </data>
  <data name="customer" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="unexpectedError" xml:space="preserve">
    <value>An unexpected error occured. Please contact the support to resolve the issue.</value>
  </data>
  <data name="invoiceId" xml:space="preserve">
    <value>Invoice ID</value>
  </data>
  <data name="searchInvoiceIds" xml:space="preserve">
    <value>Search Invoice IDs:</value>
  </data>
  <data name="searchDates" xml:space="preserve">
    <value>Search in dates:</value>
  </data>
  <data name="searchCustomers" xml:space="preserve">
    <value>Search in customers:</value>
  </data>
  <data name="failedConversion" xml:space="preserve">
    <value>Failed the conversion process for a given excel column to the specified parameter. This happened for the parameter {0} and the column with the letter {1}.</value>
  </data>
  <data name="miscellaneous" xml:space="preserve">
    <value>Miscellaneous</value>
  </data>
</root>